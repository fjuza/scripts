#!/usr/bin/env perl

use strict;
use File::Spec::Functions qw( splitpath splitdir catpath catdir catfile rootdir );
use Cwd;

die "Usage: r <cmd_to_exec>\n\n  Find all lib's to add to PERL5LIB\n" unless @ARGV;

my $mark_file = '.pbs_project';
my ($vol, $cur_dir) = splitpath(getcwd(), 1);
$cur_dir = [splitdir($cur_dir)];

while (1) {
  my $dir = catpath($vol, catdir(@$cur_dir));

  _exec_cmd($dir) if -e catfile($dir, $mark_file) and -f _;

  last if $ENV{HOME} and $dir eq $ENV{HOME};
  last if $dir eq rootdir();

  pop @$cur_dir;
}

die "Failed to find '$mark_file' file\n";


### Exec command

sub _exec_cmd {
  my ($dir) = @_;

  chdir($dir);
  if (-f 'cpanfile.snapshot' and -d 'local' and !$ENV{R_CARTON_EXEC_DONE}) {
    $ENV{R_CARTON_EXEC_DONE} = 1;    ## use Carton exec once only!
    unshift @ARGV, qw(carton exec), $0;
    warn "Using Carton!\n" if $ENV{R_DEBUG};
  }
  else {
    warn "Seting up PERL5LIB for '$dir'\n" if $ENV{R_DEBUG};
    $ENV{PERL5LIB} = join(':', _find_libs($dir), split(/:/, $ENV{PERL5LIB} || ''));
    warn "Set to PERL5LIB: $ENV{PERL5LIB}\n" if $ENV{R_DEBUG};
  }

  warn "Exec'ing: @ARGV\n" if $ENV{R_DEBUG};
  warn "... with PERL5LIB: $ENV{PERL5LIB}\n" if $ENV{R_DEBUG};
  exec(@ARGV);
  die "Failed to exec '@ARGV': $!";
}


### Find all lib deps

sub _find_libs {
  my @dirs = @_;

  my @found;
  while (my $dir = shift @dirs) {
    my $l = catdir($dir, 'lib');
    warn "Check '$dir' for 'lib/'\n" if $ENV{R_DEBUG};
    push @found, $l if -d $l;

    my $elibs = catdir($dir, 'elib');
    next unless opendir(my $dh, $elibs);
    push @dirs, grep { -d $_ } map { catfile($elibs, $_) } grep {m/^[^\.]/} readdir($dh);
  }

  return @found;
}
